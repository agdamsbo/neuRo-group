[["index.html", "neuRo reference book Preamble Source", " neuRo reference book Andreas Gammelgaard Damsbo Last render: 2023-01-05 Preamble This book is created and maintained by Andreas G Damsbo(GitHub, ORCiD, email), as part of the R-group on neuroscience research at the Neurovascular Research Group at Aarhus University Hospital, Denmark. In the group we mainly work in R and use REDCap(Harris et al. 2009) (Harris et al. 2019) for data collection. In this book I will include workflow examples on how to work with data from REDCap in R, but also share tips to buiilding a database in REDCap, a task many PhD-student may only experience once, and hence the individual experience is limited. The book is build using the bookdown package(Xie 2022) using the bookdown-demo. Source The source files are hosted on GitHub. You are welcome to contribute through comments, PRs or you can write an email to the author. Literature "],["intro.html", "Chapter 1 Introduction to R", " Chapter 1 Introduction to R Welcome to R! The first thing to do is to get an idea of how using are (or any other programming language) is fundamentally different to eg using something like LibreOffice Calc or Excel. Go to your preferred search platform and search for something like “basic r course” and you can get going. After you have the basic knowledge and a vocabulary on R, you are ready to start searching for solutions to your problems. For further help, your are always welcome to ask others in the group or you can join the neuRo-R-group on Matrix. Just follow the link. "],["recom.html", "Chapter 2 Recommendations and inspiration 2.1 Applications of R in Healthcare 2.2 More Advanced R 2.3 PhD Biostat course CheatSheet 2.4 On geocomputation 2.5 Inspiration for plots 2.6 On People Analytics 2.7 Statistacal learning 2.8 Finalfit", " Chapter 2 Recommendations and inspiration Here follows a collection of suggestions on packages, pages and clever solutions 2.1 Applications of R in Healthcare This is a very thorough book introducing a very wide range of functions in R, beginning from scratch. The book is written by Thanh Phan (whom Anne has worked with(“Can Helicopters Solve the Transport Dilemma for Patients With Symptoms of Large-Vessel Occlusion Stroke in Intermediate Density Areas? A Simulation Model Based on Real Life Data,” n.d.)), and is still a work in progress. I (andreas) have made a publishable fork of the work, which can be accessed here. Just note that not all examples are working do to missing data sets or references to non-maintained packages. 2.2 More Advanced R The Advanced R course at the PhD School at AU is based on this book: Advanced R Course by Florian Privé. This is a really good collection of more advanced R-use with focus on using the tidyverse-packages and working efficiently. A lot of other external references are also included for further reading. 2.3 PhD Biostat course CheatSheet As part of the PhD BioStat course, the teacher, Eric Parner is providing a Data Analysis reference overview, or CheatSheet. Biostat CheatSheet - click to download - source: Eric Parner, AU 2.4 On geocomputation Introduction to geocomputational work in R. link 2.5 Inspiration for plots Data can be visualised in many ways. Deciding on the best plot can be difficult. Here are some sources of insppiration: Cheatsheet on Grafics Principles. 2.6 On People Analytics A “Handbook of Regression Modeling in People”. The book is very recent (last update on 19 August 2022), with lots of example code and data. Code examples in both R, Python and Julia. All free and open source languages used in data analytics. Read it here. 2.7 Statistacal learning The field of statistical learning or machine learning is increasingly popular. The PhD School at AU offers courses on applied SL/ML, and here follows just a short introduction. The mandatory book on SL/ML in R is “An introduction to statistical learning with applications in R”(Gareth James et al. 2021). Here is a short review: Tee book can be downloaded for free as a PDF and is highly recommended. Also, there is a lecture series on youtube with the authors on the first edition of the book (currently in second edition). 2.8 Finalfit The finalfit package provides functions that help you quickly create elegant final results tables and plots when modelling in R. These can easily be exported as Word documents, PDFs, or html files. Literature "],["stRoke.html", "Chapter 3 stRoke 3.1 Install 3.2 Events and repeated instruments", " Chapter 3 stRoke The package library(stRoke)(Damsbo 2022) is a collection of function to help in data management and analysis. Below are suggestions on how to use some of the functions in your work. 3.1 Install remotes::install_github(&quot;agdamsbo/stRoke&quot;) 3.2 Events and repeated instruments The package includes the function read_redcap_tables(), which helps in handling the castellated REDCap data set format in projects utilizing events and repeated instruments. In {#workflow}, a structured approached is recommended as per the documentation provided by library(REDCapR)(Beasley 2022). This is fine, but can sometimes be a little inconvenient. The read_redcap_tables() works by wrapping REDCapR::redcap_read() and REDCapRITS::REDCap_split()followed by a bit of clean-up. stRoke::read_redcap_tables(redcap_uri = &quot;https://redcap.au.dk/api/&quot;, token = &quot;YOUR_API_KEY_GOES_HERE&quot;, forms = c(&quot;rbans&quot;, &quot;mrs&quot;), fields = c(&quot;record_id&quot;, &quot;age&quot;, &quot;class_toast&quot;)) Literature "],["redcap-intro.html", "Chapter 4 Intro to REDCap data 4.1 Getting access 4.2 Downloading data", " Chapter 4 Intro to REDCap data This section is intended as a “REDCap data manipulation 101” for pre-graduate students in the group and as an intro to getting RStudio set up for work with REDCap data. In the following is a guide to get started working on REDCap data in R using the REDCapR-package.(Beasley 2022) Following the package link provides an extensive description on workflows and functionality. However, sometimes less is more, and so goes. A more thorough discussion on REDCap data can be found later as well as a chapter on tips to building a REDCap database. 4.1 Getting access Before you are able to get any data out of REDCap, make sure that you are able to get in. After you are logged in, make sure, that you have permissions to get an API-key. The API-key is a alpha-numeric key used to verify yourself to the REDCap server, when requesting data export. The API key equals user name and password, and circumvents the two-factor verification process. Naturally, the API key should be kept in a safe way. To be clear: DO NEVER STORE THE API-KEY AS PLAIN TEXT. The library(keyring)(Csárdi 2022) offers a safe and easy way to store API keys and other secrets. Please copy and run the code below: require(keyring) key_set(&quot;API_KEY&quot;, prompt = &quot;API key: &quot;) Do note, that the name “API_KEY” can be changed to whatever you prefer. Note that the function will overwrite any existing keys with the same name without any warning (!). 4.2 Downloading data There are different packages to access and download data from R. In the REDCap-tools repository, available tools and packages are referenced. Here I will provide an example, as to download minimal data in a focused way, using REDCapR.(Beasley 2022). Please have a look in the REDCap-chapter for an optimised approach when handling events and repeated instruments. library(REDCapR) # Returns the variables &quot;record_id&quot; and &quot;age&quot;. ds_some_vars &lt;- redcap_read( redcap_uri = &quot;https://redcap.au.dk/api/&quot;, # This is the address for projects at the AU-server token = keyring::key_get(&quot;API_KEY&quot;), fields = c(&quot;record_id&quot;, &quot;age&quot;) )$data # Return only records with IDs of 1 and 4 ds_some_rows &lt;- redcap_read( redcap_uri = &quot;https://redcap.au.dk/api/&quot;, # This is the address for projects at the AU-server token = keyring::key_get(&quot;API_KEY&quot;), records = c(1, 4) )$data To get a full list of available variable names, you can either go through the codebook on REDCap, or you can try the following, but be aware, that the resulting vector of variable names can get a little long and confusing. # Returns a vector of names of all accessible variables. variable_names &lt;- redcap_read( redcap_uri = &quot;https://redcap.au.dk/api/&quot;, # This is the address for projects at the AU-server token = keyring::key_get(&quot;API_KEY&quot;) )$data |&gt; colnames() Here is an example on how to export data on RBANS and cleaning the data for plotting. ds &lt;- redcap_read( redcap_uri = &quot;https://redcap.au.dk/api/&quot;, # This is the address for projects at the AU-server token = &quot;YOUR_API_KEY_GOES_HERE&quot;, records = c(1:35), # Downloading data from ID 1 to 35. forms = &quot;rbans&quot;, # Downloading only the RBANS instrument event = c(&quot;3_months_arm_1&quot;, # Specifying only to download 3 and 12 months data &quot;12_months_arm_1&quot;) )$data |&gt; select( # Selecting variables to keep c(&quot;record_id&quot;, &quot;redcap_event_name&quot;, ends_with(c(&quot;_is&quot;,&quot;_lo&quot;,&quot;_up&quot;,&quot;_per&quot;))) # I only want index scores, lower and upper CIs and percentile. ) |&gt; na.omit() # Omitting IDs with missing data. head(ds, n = 5) # Showing only the first 5 rows Further examples and scripts can be found in the ENIGMA code repository. Literature "],["redcap-adv.html", "Chapter 5 REDCap database and more advanced functions 5.1 Downloading data", " Chapter 5 REDCap database and more advanced functions Working with data analysis in the research group, and in general it is highly advisable to keep data at a secure server (like REDCap) and only working on temporary data on your machine only saving outcome and aggregated tables if necessary. I have collected some experience building databases in REDCap.(Harris et al. 2019) Genereally, it is a very effective tool, that is relatively easy to learn and use. There is a lot of material available online, that I will try and link to (and have no intentions competing with that), but here I will try to collect some tips and tricks for collecting data in an efficient way and in a Danish setting. 5.1 Downloading data Literature "],["redcap-data.html", "Chapter 6 Building a REDCap database 6.1 Creating a database 6.2 Setting up a database from a dataset", " Chapter 6 Building a REDCap database I will try to provide examples for two cases: 6.1 Creating a database Lessons learned… 6.2 Setting up a database from a dataset Below will follow steps necessary to get a data base set up based on a data set provided. 6.2.1 Create a data dictionary Copy and run the following to create a DataDictionary draft. Change the var_name vector to the variable names of your own project and the same for instrument. To fill out the rest, open the .ods file in a visual editor as LibreOffice go manual. require(readODS) ## Loading required package: readODS var_name &lt;- c(&quot;record_id&quot;,colnames(stRoke::talos)) instrument = c(&quot;incl&quot;,&quot;incl&quot;,&quot;follow1&quot;,&quot;follow6&quot;,&quot;incl&quot;,&quot;incl&quot;,&quot;incl&quot;) (df &lt;- data.frame(Variable...Field.Name=var_name, Form.Name=instrument, Field.Type = &quot;text&quot;, Choices..Calculations..OR.Slider.Labels = &quot;&quot;, Field.Label = &quot;&quot;)) ## Variable...Field.Name Form.Name Field.Type ## 1 record_id incl text ## 2 rtreat incl text ## 3 mrs_1 follow1 text ## 4 mrs_6 follow6 text ## 5 hypertension incl text ## 6 diabetes incl text ## 7 civil incl text ## Choices..Calculations..OR.Slider.Labels Field.Label ## 1 ## 2 ## 3 ## 4 ## 5 ## 6 ## 7 write_ods(df, path = &quot;dd_draft.ods&quot;) Have a look at the demonstration file below for inspiration. head(read.csv(&quot;./redcap/REDCapDataDictonaryDemo.csv&quot;)) ## Variable...Field.Name Form.Name Section.Header Field.Type ## 1 study_id demographics text ## 2 date_enrolled demographics Demographic Characteristics text ## 3 first_name demographics text ## 4 last_name demographics text ## 5 address demographics Contact Information notes ## 6 telephone_1 demographics text ## Field.Label Choices..Calculations..OR.Slider.Labels ## 1 Study ID ## 2 Date subject signed consent ## 3 First Name ## 4 Last Name ## 5 Street, City, State, ZIP ## 6 Phone number ## Field.Note Text.Validation.Type.OR.Show.Slider.Number ## 1 ## 2 YYYY-MM-DD date ## 3 ## 4 ## 5 ## 6 Include Area Code phone ## Text.Validation.Min Text.Validation.Max Identifier. ## 1 NA NA ## 2 NA NA ## 3 NA NA y ## 4 NA NA y ## 5 NA NA y ## 6 NA NA y ## Branching.Logic..Show.field.only.if.... Required.Field. Custom.Alignment ## 1 NA ## 2 NA ## 3 NA ## 4 NA ## 5 NA ## 6 NA ## Question.Number..surveys.only. Matrix.Group.Name ## 1 NA ## 2 NA ## 3 NA ## 4 NA ## 5 NA ## 6 NA Next steps are coming "],["literature.html", "Chapter 7 Literature", " Chapter 7 Literature "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
