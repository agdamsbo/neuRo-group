[["redcap.html", "Chapter 3 REDCap in R 3.1 Getting started 3.2 Data wrangling 3.3 Notes", " Chapter 3 REDCap in R Working with data analysis in th egroup, and in general it is highly advisable to keep data at a secure server (like REDCap) and only working on temporary data on your machine only saving outcome and aggregated tables if necessary. In the following is a guide to get started working on REDCap data in R using the REDCapR-package.(Beasley 2022) Following the package link provides an extensive description on workflows and functionality. However, sometimes less is more, and so goes. 3.1 Getting started Before you are able to get any data out of REDCap, make sure that you are able to get in. After you are logged in, make sure, that you have permissions to get an API-key. The API-key is a alpha-numeric key used to verify yourself to the REDCap-server, when requesting data export. library(REDCapR) # Returns the variables &quot;record_id&quot; and &quot;age&quot;. ds_some_vars &lt;- redcap_read( redcap_uri = &quot;https://redcap.au.dk/api/&quot;, # This is the address for projects at the AU-server token = &quot;YOUR_API_KEY_GOES_HERE&quot;, fields = c(&quot;record_id&quot;, &quot;age&quot;) )$data # Return only records with IDs of 1 and 4 ds_some_rows &lt;- redcap_read( redcap_uri = &quot;https://redcap.au.dk/api/&quot;, # This is the address for projects at the AU-server token = &quot;YOUR_API_KEY_GOES_HERE&quot;, records = c(1, 4) )$data To get a full list of available variable names, you can either go through the codebook on REDCap, or you can try the following, but be aware, that the resulting vector of variable names can get a little long and confusing. # Returns a vector of names of all accessible variables. variable_names &lt;- redcap_read( redcap_uri = &quot;https://redcap.au.dk/api/&quot;, # This is the address for projects at the AU-server token = &quot;YOUR_API_KEY_GOES_HERE&quot; )$data |&gt; colnames() Note that the ’ |&gt; ’ is the pipe-operator native to R since version 4.1. It works similarly to the ’ %&gt;% ’ from the tidyverse. 3.2 Data wrangling When using the “repeated instruments” function within REDcap the dataset will be in “long” format. Depending on the analysis, the data set can be converted to a “wide” format. The pivot_wider() from the tidyr pakckage can be used. A custom, easier function is on its way as part of the stRoke-package. 23.nov.2022 3.3 Notes As a standard only export privileges should be given to an API-key and only to de-identified data. Full access with both read and write access is possible but should be highly restricted. API-keys should be regenerated regularly. Literature "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
